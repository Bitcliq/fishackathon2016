//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by SlSvcUtil, version 5.0.61118.0
// 


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IssuesWebServiceSoap")]
public interface IssuesWebServiceSoap
{

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/RegisterReporter", ReplyAction = "*")]
    System.IAsyncResult BeginRegisterReporter(RegisterReporterRequest request, System.AsyncCallback callback, object asyncState);

    RegisterReporterResponse EndRegisterReporter(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/ReportIssueAndRegisterUser", ReplyAction = "*")]
    System.IAsyncResult BeginReportIssueAndRegisterUser(ReportIssueAndRegisterUserRequest request, System.AsyncCallback callback, object asyncState);

    ReportIssueAndRegisterUserResponse EndReportIssueAndRegisterUser(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/GetMyIssues", ReplyAction = "*")]
    System.IAsyncResult BeginGetMyIssues(GetMyIssuesRequest request, System.AsyncCallback callback, object asyncState);

    GetMyIssuesResponse EndGetMyIssues(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/GetTypes", ReplyAction = "*")]
    System.IAsyncResult BeginGetTypes(GetTypesRequest request, System.AsyncCallback callback, object asyncState);

    GetTypesResponse EndGetTypes(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/GetTypesAndSubTypes", ReplyAction = "*")]
    System.IAsyncResult BeginGetTypesAndSubTypes(GetTypesAndSubTypesRequest request, System.AsyncCallback callback, object asyncState);

    GetTypesAndSubTypesResponse EndGetTypesAndSubTypes(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/DeleteIssue", ReplyAction = "*")]
    System.IAsyncResult BeginDeleteIssue(DeleteIssueRequest request, System.AsyncCallback callback, object asyncState);

    DeleteIssueResponse EndDeleteIssue(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/GetNearByIssues", ReplyAction = "*")]
    System.IAsyncResult BeginGetNearByIssues(GetNearByIssuesRequest request, System.AsyncCallback callback, object asyncState);

    GetNearByIssuesResponse EndGetNearByIssues(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/CountNearByIssues", ReplyAction = "*")]
    System.IAsyncResult BeginCountNearByIssues(CountNearByIssuesRequest request, System.AsyncCallback callback, object asyncState);

    CountNearByIssuesResponse EndCountNearByIssues(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/ListProperties", ReplyAction = "*")]
    System.IAsyncResult BeginListProperties(ListPropertiesRequest request, System.AsyncCallback callback, object asyncState);

    ListPropertiesResponse EndListProperties(System.IAsyncResult result);

    [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/InsertProperty", ReplyAction = "*")]
    System.IAsyncResult BeginInsertProperty(InsertPropertyRequest request, System.AsyncCallback callback, object asyncState);

    InsertPropertyResponse EndInsertProperty(System.IAsyncResult result);
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class RegisterReporterRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "RegisterReporter", Namespace = "http://tempuri.org/", Order = 0)]
    public RegisterReporterRequestBody Body;

    public RegisterReporterRequest()
    {
    }

    public RegisterReporterRequest(RegisterReporterRequestBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class RegisterReporterRequestBody
{

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
    public string Name;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 1)]
    public string Email;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 2)]
    public string Password;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 3)]
    public string PhoneNumber;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 4)]
    public string IPAddress;

    public RegisterReporterRequestBody()
    {
    }

    public RegisterReporterRequestBody(string Name, string Email, string Password, string PhoneNumber, string IPAddress)
    {
        this.Name = Name;
        this.Email = Email;
        this.Password = Password;
        this.PhoneNumber = PhoneNumber;
        this.IPAddress = IPAddress;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class RegisterReporterResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "RegisterReporterResponse", Namespace = "http://tempuri.org/", Order = 0)]
    public RegisterReporterResponseBody Body;

    public RegisterReporterResponse()
    {
    }

    public RegisterReporterResponse(RegisterReporterResponseBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class RegisterReporterResponseBody
{

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
    public string RegisterReporterResult;

    public RegisterReporterResponseBody()
    {
    }

    public RegisterReporterResponseBody(string RegisterReporterResult)
    {
        this.RegisterReporterResult = RegisterReporterResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class ReportIssueAndRegisterUserRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "ReportIssueAndRegisterUser", Namespace = "http://tempuri.org/", Order = 0)]
    public ReportIssueAndRegisterUserRequestBody Body;

    public ReportIssueAndRegisterUserRequest()
    {
    }

    public ReportIssueAndRegisterUserRequest(ReportIssueAndRegisterUserRequestBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class ReportIssueAndRegisterUserRequestBody
{

    [System.Runtime.Serialization.DataMemberAttribute(Order = 0)]
    public System.Nullable<int> ReporterID;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 1)]
    public string Name;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 2)]
    public string Email;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 3)]
    public string Password;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 4)]
    public string PhoneNumber;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
    public System.Nullable<int> AccountID;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 6)]
    public string Subject;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 7)]
    public string Message;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 8)]
    public string FileName;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 9)]
    public byte[] File;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 10)]
    public string FileType;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 11)]
    public int FileLength;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 12)]
    public System.Nullable<decimal> Latitude;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 13)]
    public System.Nullable<decimal> Longitude;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 14)]
    public System.Nullable<int> TypeID;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 15)]
    public System.Nullable<int> ImageRotation;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 16)]
    public string Device;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 17)]
    public System.Nullable<int> PropertyID;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 18)]
    public string PropertyName;

    public ReportIssueAndRegisterUserRequestBody()
    {
    }

    public ReportIssueAndRegisterUserRequestBody(
                System.Nullable<int> ReporterID,
                string Name,
                string Email,
                string Password,
                string PhoneNumber,
                System.Nullable<int> AccountID,
                string Subject,
                string Message,
                string FileName,
                byte[] File,
                string FileType,
                int FileLength,
                System.Nullable<decimal> Latitude,
                System.Nullable<decimal> Longitude,
                System.Nullable<int> TypeID,
                System.Nullable<int> ImageRotation,
                string Device,
                System.Nullable<int> PropertyID,
                string PropertyName)
    {
        this.ReporterID = ReporterID;
        this.Name = Name;
        this.Email = Email;
        this.Password = Password;
        this.PhoneNumber = PhoneNumber;
        this.AccountID = AccountID;
        this.Subject = Subject;
        this.Message = Message;
        this.FileName = FileName;
        this.File = File;
        this.FileType = FileType;
        this.FileLength = FileLength;
        this.Latitude = Latitude;
        this.Longitude = Longitude;
        this.TypeID = TypeID;
        this.ImageRotation = ImageRotation;
        this.Device = Device;
        this.PropertyID = PropertyID;
        this.PropertyName = PropertyName;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class ReportIssueAndRegisterUserResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "ReportIssueAndRegisterUserResponse", Namespace = "http://tempuri.org/", Order = 0)]
    public ReportIssueAndRegisterUserResponseBody Body;

    public ReportIssueAndRegisterUserResponse()
    {
    }

    public ReportIssueAndRegisterUserResponse(ReportIssueAndRegisterUserResponseBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class ReportIssueAndRegisterUserResponseBody
{

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
    public string ReportIssueAndRegisterUserResult;

    public ReportIssueAndRegisterUserResponseBody()
    {
    }

    public ReportIssueAndRegisterUserResponseBody(string ReportIssueAndRegisterUserResult)
    {
        this.ReportIssueAndRegisterUserResult = ReportIssueAndRegisterUserResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class GetMyIssuesRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "GetMyIssues", Namespace = "http://tempuri.org/", Order = 0)]
    public GetMyIssuesRequestBody Body;

    public GetMyIssuesRequest()
    {
    }

    public GetMyIssuesRequest(GetMyIssuesRequestBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class GetMyIssuesRequestBody
{

    [System.Runtime.Serialization.DataMemberAttribute(Order = 0)]
    public int ReporterID;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
    public System.Nullable<int> AccountID;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
    public System.Nullable<int> TypeID;

    public GetMyIssuesRequestBody()
    {
    }

    public GetMyIssuesRequestBody(int ReporterID, System.Nullable<int> AccountID, System.Nullable<int> TypeID)
    {
        this.ReporterID = ReporterID;
        this.AccountID = AccountID;
        this.TypeID = TypeID;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class GetMyIssuesResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "GetMyIssuesResponse", Namespace = "http://tempuri.org/", Order = 0)]
    public GetMyIssuesResponseBody Body;

    public GetMyIssuesResponse()
    {
    }

    public GetMyIssuesResponse(GetMyIssuesResponseBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class GetMyIssuesResponseBody
{

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
    public string GetMyIssuesResult;

    public GetMyIssuesResponseBody()
    {
    }

    public GetMyIssuesResponseBody(string GetMyIssuesResult)
    {
        this.GetMyIssuesResult = GetMyIssuesResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class GetTypesRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "GetTypes", Namespace = "http://tempuri.org/", Order = 0)]
    public GetTypesRequestBody Body;

    public GetTypesRequest()
    {
    }

    public GetTypesRequest(GetTypesRequestBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class GetTypesRequestBody
{

    [System.Runtime.Serialization.DataMemberAttribute(Order = 0)]
    public System.Nullable<int> AccountID;

    public GetTypesRequestBody()
    {
    }

    public GetTypesRequestBody(System.Nullable<int> AccountID)
    {
        this.AccountID = AccountID;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class GetTypesResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "GetTypesResponse", Namespace = "http://tempuri.org/", Order = 0)]
    public GetTypesResponseBody Body;

    public GetTypesResponse()
    {
    }

    public GetTypesResponse(GetTypesResponseBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class GetTypesResponseBody
{

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
    public string GetTypesResult;

    public GetTypesResponseBody()
    {
    }

    public GetTypesResponseBody(string GetTypesResult)
    {
        this.GetTypesResult = GetTypesResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class GetTypesAndSubTypesRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "GetTypesAndSubTypes", Namespace = "http://tempuri.org/", Order = 0)]
    public GetTypesAndSubTypesRequestBody Body;

    public GetTypesAndSubTypesRequest()
    {
    }

    public GetTypesAndSubTypesRequest(GetTypesAndSubTypesRequestBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class GetTypesAndSubTypesRequestBody
{

    [System.Runtime.Serialization.DataMemberAttribute(Order = 0)]
    public System.Nullable<int> AccountID;

    public GetTypesAndSubTypesRequestBody()
    {
    }

    public GetTypesAndSubTypesRequestBody(System.Nullable<int> AccountID)
    {
        this.AccountID = AccountID;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class GetTypesAndSubTypesResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "GetTypesAndSubTypesResponse", Namespace = "http://tempuri.org/", Order = 0)]
    public GetTypesAndSubTypesResponseBody Body;

    public GetTypesAndSubTypesResponse()
    {
    }

    public GetTypesAndSubTypesResponse(GetTypesAndSubTypesResponseBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class GetTypesAndSubTypesResponseBody
{

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
    public string GetTypesAndSubTypesResult;

    public GetTypesAndSubTypesResponseBody()
    {
    }

    public GetTypesAndSubTypesResponseBody(string GetTypesAndSubTypesResult)
    {
        this.GetTypesAndSubTypesResult = GetTypesAndSubTypesResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class DeleteIssueRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "DeleteIssue", Namespace = "http://tempuri.org/", Order = 0)]
    public DeleteIssueRequestBody Body;

    public DeleteIssueRequest()
    {
    }

    public DeleteIssueRequest(DeleteIssueRequestBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class DeleteIssueRequestBody
{

    [System.Runtime.Serialization.DataMemberAttribute(Order = 0)]
    public int ReporterID;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
    public System.Nullable<int> AccountID;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
    public int IssueID;

    public DeleteIssueRequestBody()
    {
    }

    public DeleteIssueRequestBody(int ReporterID, System.Nullable<int> AccountID, int IssueID)
    {
        this.ReporterID = ReporterID;
        this.AccountID = AccountID;
        this.IssueID = IssueID;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class DeleteIssueResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "DeleteIssueResponse", Namespace = "http://tempuri.org/", Order = 0)]
    public DeleteIssueResponseBody Body;

    public DeleteIssueResponse()
    {
    }

    public DeleteIssueResponse(DeleteIssueResponseBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class DeleteIssueResponseBody
{

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
    public string DeleteIssueResult;

    public DeleteIssueResponseBody()
    {
    }

    public DeleteIssueResponseBody(string DeleteIssueResult)
    {
        this.DeleteIssueResult = DeleteIssueResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class GetNearByIssuesRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "GetNearByIssues", Namespace = "http://tempuri.org/", Order = 0)]
    public GetNearByIssuesRequestBody Body;

    public GetNearByIssuesRequest()
    {
    }

    public GetNearByIssuesRequest(GetNearByIssuesRequestBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class GetNearByIssuesRequestBody
{

    [System.Runtime.Serialization.DataMemberAttribute(Order = 0)]
    public System.Nullable<int> AccountID;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
    public double Latitude;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
    public double Longitude;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
    public System.Nullable<int> Radius;

    public GetNearByIssuesRequestBody()
    {
    }

    public GetNearByIssuesRequestBody(System.Nullable<int> AccountID, double Latitude, double Longitude, System.Nullable<int> Radius)
    {
        this.AccountID = AccountID;
        this.Latitude = Latitude;
        this.Longitude = Longitude;
        this.Radius = Radius;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class GetNearByIssuesResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "GetNearByIssuesResponse", Namespace = "http://tempuri.org/", Order = 0)]
    public GetNearByIssuesResponseBody Body;

    public GetNearByIssuesResponse()
    {
    }

    public GetNearByIssuesResponse(GetNearByIssuesResponseBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class GetNearByIssuesResponseBody
{

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
    public string GetNearByIssuesResult;

    public GetNearByIssuesResponseBody()
    {
    }

    public GetNearByIssuesResponseBody(string GetNearByIssuesResult)
    {
        this.GetNearByIssuesResult = GetNearByIssuesResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class CountNearByIssuesRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "CountNearByIssues", Namespace = "http://tempuri.org/", Order = 0)]
    public CountNearByIssuesRequestBody Body;

    public CountNearByIssuesRequest()
    {
    }

    public CountNearByIssuesRequest(CountNearByIssuesRequestBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class CountNearByIssuesRequestBody
{

    [System.Runtime.Serialization.DataMemberAttribute(Order = 0)]
    public System.Nullable<int> AccountID;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
    public double Latitude;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
    public double Longitude;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
    public System.Nullable<int> Radius;

    public CountNearByIssuesRequestBody()
    {
    }

    public CountNearByIssuesRequestBody(System.Nullable<int> AccountID, double Latitude, double Longitude, System.Nullable<int> Radius)
    {
        this.AccountID = AccountID;
        this.Latitude = Latitude;
        this.Longitude = Longitude;
        this.Radius = Radius;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class CountNearByIssuesResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "CountNearByIssuesResponse", Namespace = "http://tempuri.org/", Order = 0)]
    public CountNearByIssuesResponseBody Body;

    public CountNearByIssuesResponse()
    {
    }

    public CountNearByIssuesResponse(CountNearByIssuesResponseBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class CountNearByIssuesResponseBody
{

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
    public string CountNearByIssuesResult;

    public CountNearByIssuesResponseBody()
    {
    }

    public CountNearByIssuesResponseBody(string CountNearByIssuesResult)
    {
        this.CountNearByIssuesResult = CountNearByIssuesResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class ListPropertiesRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "ListProperties", Namespace = "http://tempuri.org/", Order = 0)]
    public ListPropertiesRequestBody Body;

    public ListPropertiesRequest()
    {
    }

    public ListPropertiesRequest(ListPropertiesRequestBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class ListPropertiesRequestBody
{

    [System.Runtime.Serialization.DataMemberAttribute(Order = 0)]
    public System.Nullable<int> AccountID;

    public ListPropertiesRequestBody()
    {
    }

    public ListPropertiesRequestBody(System.Nullable<int> AccountID)
    {
        this.AccountID = AccountID;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class ListPropertiesResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "ListPropertiesResponse", Namespace = "http://tempuri.org/", Order = 0)]
    public ListPropertiesResponseBody Body;

    public ListPropertiesResponse()
    {
    }

    public ListPropertiesResponse(ListPropertiesResponseBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class ListPropertiesResponseBody
{

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
    public string ListPropertiesResult;

    public ListPropertiesResponseBody()
    {
    }

    public ListPropertiesResponseBody(string ListPropertiesResult)
    {
        this.ListPropertiesResult = ListPropertiesResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class InsertPropertyRequest
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "InsertProperty", Namespace = "http://tempuri.org/", Order = 0)]
    public InsertPropertyRequestBody Body;

    public InsertPropertyRequest()
    {
    }

    public InsertPropertyRequest(InsertPropertyRequestBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class InsertPropertyRequestBody
{

    [System.Runtime.Serialization.DataMemberAttribute(Order = 0)]
    public System.Nullable<int> AccountID;

    [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
    public System.Nullable<int> ReporterID;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 2)]
    public string Name;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 3)]
    public string Email;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 4)]
    public string Password;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 5)]
    public string PhoneNumber;

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 6)]
    public string PropertyName;

    public InsertPropertyRequestBody()
    {
    }

    public InsertPropertyRequestBody(System.Nullable<int> AccountID, System.Nullable<int> ReporterID, string Name, string Email, string Password, string PhoneNumber, string PropertyName)
    {
        this.AccountID = AccountID;
        this.ReporterID = ReporterID;
        this.Name = Name;
        this.Email = Email;
        this.Password = Password;
        this.PhoneNumber = PhoneNumber;
        this.PropertyName = PropertyName;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class InsertPropertyResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Name = "InsertPropertyResponse", Namespace = "http://tempuri.org/", Order = 0)]
    public InsertPropertyResponseBody Body;

    public InsertPropertyResponse()
    {
    }

    public InsertPropertyResponse(InsertPropertyResponseBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
public partial class InsertPropertyResponseBody
{

    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
    public string InsertPropertyResult;

    public InsertPropertyResponseBody()
    {
    }

    public InsertPropertyResponseBody(string InsertPropertyResult)
    {
        this.InsertPropertyResult = InsertPropertyResult;
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IssuesWebServiceSoapChannel : IssuesWebServiceSoap, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class RegisterReporterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public RegisterReporterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ReportIssueAndRegisterUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ReportIssueAndRegisterUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetMyIssuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetMyIssuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetTypesAndSubTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetTypesAndSubTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DeleteIssueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public DeleteIssueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetNearByIssuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public GetNearByIssuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CountNearByIssuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public CountNearByIssuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ListPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public ListPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class InsertPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    public InsertPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class IssuesWebServiceSoapClient : System.ServiceModel.ClientBase<IssuesWebServiceSoap>, IssuesWebServiceSoap
{

    private BeginOperationDelegate onBeginRegisterReporterDelegate;

    private EndOperationDelegate onEndRegisterReporterDelegate;

    private System.Threading.SendOrPostCallback onRegisterReporterCompletedDelegate;

    private BeginOperationDelegate onBeginReportIssueAndRegisterUserDelegate;

    private EndOperationDelegate onEndReportIssueAndRegisterUserDelegate;

    private System.Threading.SendOrPostCallback onReportIssueAndRegisterUserCompletedDelegate;

    private BeginOperationDelegate onBeginGetMyIssuesDelegate;

    private EndOperationDelegate onEndGetMyIssuesDelegate;

    private System.Threading.SendOrPostCallback onGetMyIssuesCompletedDelegate;

    private BeginOperationDelegate onBeginGetTypesDelegate;

    private EndOperationDelegate onEndGetTypesDelegate;

    private System.Threading.SendOrPostCallback onGetTypesCompletedDelegate;

    private BeginOperationDelegate onBeginGetTypesAndSubTypesDelegate;

    private EndOperationDelegate onEndGetTypesAndSubTypesDelegate;

    private System.Threading.SendOrPostCallback onGetTypesAndSubTypesCompletedDelegate;

    private BeginOperationDelegate onBeginDeleteIssueDelegate;

    private EndOperationDelegate onEndDeleteIssueDelegate;

    private System.Threading.SendOrPostCallback onDeleteIssueCompletedDelegate;

    private BeginOperationDelegate onBeginGetNearByIssuesDelegate;

    private EndOperationDelegate onEndGetNearByIssuesDelegate;

    private System.Threading.SendOrPostCallback onGetNearByIssuesCompletedDelegate;

    private BeginOperationDelegate onBeginCountNearByIssuesDelegate;

    private EndOperationDelegate onEndCountNearByIssuesDelegate;

    private System.Threading.SendOrPostCallback onCountNearByIssuesCompletedDelegate;

    private BeginOperationDelegate onBeginListPropertiesDelegate;

    private EndOperationDelegate onEndListPropertiesDelegate;

    private System.Threading.SendOrPostCallback onListPropertiesCompletedDelegate;

    private BeginOperationDelegate onBeginInsertPropertyDelegate;

    private EndOperationDelegate onEndInsertPropertyDelegate;

    private System.Threading.SendOrPostCallback onInsertPropertyCompletedDelegate;

    private BeginOperationDelegate onBeginOpenDelegate;

    private EndOperationDelegate onEndOpenDelegate;

    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;

    private BeginOperationDelegate onBeginCloseDelegate;

    private EndOperationDelegate onEndCloseDelegate;

    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;

    public IssuesWebServiceSoapClient()
    {
    }

    public IssuesWebServiceSoapClient(string endpointConfigurationName) :
        base(endpointConfigurationName)
    {
    }

    public IssuesWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) :
        base(endpointConfigurationName, remoteAddress)
    {
    }

    public IssuesWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
        base(endpointConfigurationName, remoteAddress)
    {
    }

    public IssuesWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
        base(binding, remoteAddress)
    {
    }

    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }

    public event System.EventHandler<RegisterReporterCompletedEventArgs> RegisterReporterCompleted;

    public event System.EventHandler<ReportIssueAndRegisterUserCompletedEventArgs> ReportIssueAndRegisterUserCompleted;

    public event System.EventHandler<GetMyIssuesCompletedEventArgs> GetMyIssuesCompleted;

    public event System.EventHandler<GetTypesCompletedEventArgs> GetTypesCompleted;

    public event System.EventHandler<GetTypesAndSubTypesCompletedEventArgs> GetTypesAndSubTypesCompleted;

    public event System.EventHandler<DeleteIssueCompletedEventArgs> DeleteIssueCompleted;

    public event System.EventHandler<GetNearByIssuesCompletedEventArgs> GetNearByIssuesCompleted;

    public event System.EventHandler<CountNearByIssuesCompletedEventArgs> CountNearByIssuesCompleted;

    public event System.EventHandler<ListPropertiesCompletedEventArgs> ListPropertiesCompleted;

    public event System.EventHandler<InsertPropertyCompletedEventArgs> InsertPropertyCompleted;

    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;

    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IssuesWebServiceSoap.BeginRegisterReporter(RegisterReporterRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginRegisterReporter(request, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private System.IAsyncResult BeginRegisterReporter(string Name, string Email, string Password, string PhoneNumber, string IPAddress, System.AsyncCallback callback, object asyncState)
    {
        RegisterReporterRequest inValue = new RegisterReporterRequest();
        inValue.Body = new RegisterReporterRequestBody();
        inValue.Body.Name = Name;
        inValue.Body.Email = Email;
        inValue.Body.Password = Password;
        inValue.Body.PhoneNumber = PhoneNumber;
        inValue.Body.IPAddress = IPAddress;
        return ((IssuesWebServiceSoap)(this)).BeginRegisterReporter(inValue, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    RegisterReporterResponse IssuesWebServiceSoap.EndRegisterReporter(System.IAsyncResult result)
    {
        return base.Channel.EndRegisterReporter(result);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private string EndRegisterReporter(System.IAsyncResult result)
    {
        RegisterReporterResponse retVal = ((IssuesWebServiceSoap)(this)).EndRegisterReporter(result);
        return retVal.Body.RegisterReporterResult;
    }

    private System.IAsyncResult OnBeginRegisterReporter(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string Name = ((string)(inValues[0]));
        string Email = ((string)(inValues[1]));
        string Password = ((string)(inValues[2]));
        string PhoneNumber = ((string)(inValues[3]));
        string IPAddress = ((string)(inValues[4]));
        return this.BeginRegisterReporter(Name, Email, Password, PhoneNumber, IPAddress, callback, asyncState);
    }

    private object[] OnEndRegisterReporter(System.IAsyncResult result)
    {
        string retVal = this.EndRegisterReporter(result);
        return new object[] {
                retVal};
    }

    private void OnRegisterReporterCompleted(object state)
    {
        if ((this.RegisterReporterCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.RegisterReporterCompleted(this, new RegisterReporterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void RegisterReporterAsync(string Name, string Email, string Password, string PhoneNumber, string IPAddress)
    {
        this.RegisterReporterAsync(Name, Email, Password, PhoneNumber, IPAddress, null);
    }

    public void RegisterReporterAsync(string Name, string Email, string Password, string PhoneNumber, string IPAddress, object userState)
    {
        if ((this.onBeginRegisterReporterDelegate == null))
        {
            this.onBeginRegisterReporterDelegate = new BeginOperationDelegate(this.OnBeginRegisterReporter);
        }
        if ((this.onEndRegisterReporterDelegate == null))
        {
            this.onEndRegisterReporterDelegate = new EndOperationDelegate(this.OnEndRegisterReporter);
        }
        if ((this.onRegisterReporterCompletedDelegate == null))
        {
            this.onRegisterReporterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterReporterCompleted);
        }
        base.InvokeAsync(this.onBeginRegisterReporterDelegate, new object[] {
                    Name,
                    Email,
                    Password,
                    PhoneNumber,
                    IPAddress}, this.onEndRegisterReporterDelegate, this.onRegisterReporterCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IssuesWebServiceSoap.BeginReportIssueAndRegisterUser(ReportIssueAndRegisterUserRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginReportIssueAndRegisterUser(request, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private System.IAsyncResult BeginReportIssueAndRegisterUser(
                System.Nullable<int> ReporterID,
                string Name,
                string Email,
                string Password,
                string PhoneNumber,
                System.Nullable<int> AccountID,
                string Subject,
                string Message,
                string FileName,
                byte[] File,
                string FileType,
                int FileLength,
                System.Nullable<decimal> Latitude,
                System.Nullable<decimal> Longitude,
                System.Nullable<int> TypeID,
                System.Nullable<int> ImageRotation,
                string Device,
                System.Nullable<int> PropertyID,
                string PropertyName,
                System.AsyncCallback callback,
                object asyncState)
    {
        ReportIssueAndRegisterUserRequest inValue = new ReportIssueAndRegisterUserRequest();
        inValue.Body = new ReportIssueAndRegisterUserRequestBody();
        inValue.Body.ReporterID = ReporterID;
        inValue.Body.Name = Name;
        inValue.Body.Email = Email;
        inValue.Body.Password = Password;
        inValue.Body.PhoneNumber = PhoneNumber;
        inValue.Body.AccountID = AccountID;
        inValue.Body.Subject = Subject;
        inValue.Body.Message = Message;
        inValue.Body.FileName = FileName;
        inValue.Body.File = File;
        inValue.Body.FileType = FileType;
        inValue.Body.FileLength = FileLength;
        inValue.Body.Latitude = Latitude;
        inValue.Body.Longitude = Longitude;
        inValue.Body.TypeID = TypeID;
        inValue.Body.ImageRotation = ImageRotation;
        inValue.Body.Device = Device;
        inValue.Body.PropertyID = PropertyID;
        inValue.Body.PropertyName = PropertyName;
        return ((IssuesWebServiceSoap)(this)).BeginReportIssueAndRegisterUser(inValue, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    ReportIssueAndRegisterUserResponse IssuesWebServiceSoap.EndReportIssueAndRegisterUser(System.IAsyncResult result)
    {
        return base.Channel.EndReportIssueAndRegisterUser(result);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private string EndReportIssueAndRegisterUser(System.IAsyncResult result)
    {
        ReportIssueAndRegisterUserResponse retVal = ((IssuesWebServiceSoap)(this)).EndReportIssueAndRegisterUser(result);
        return retVal.Body.ReportIssueAndRegisterUserResult;
    }

    private System.IAsyncResult OnBeginReportIssueAndRegisterUser(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Nullable<int> ReporterID = ((System.Nullable<int>)(inValues[0]));
        string Name = ((string)(inValues[1]));
        string Email = ((string)(inValues[2]));
        string Password = ((string)(inValues[3]));
        string PhoneNumber = ((string)(inValues[4]));
        System.Nullable<int> AccountID = ((System.Nullable<int>)(inValues[5]));
        string Subject = ((string)(inValues[6]));
        string Message = ((string)(inValues[7]));
        string FileName = ((string)(inValues[8]));
        byte[] File = ((byte[])(inValues[9]));
        string FileType = ((string)(inValues[10]));
        int FileLength = ((int)(inValues[11]));
        System.Nullable<decimal> Latitude = ((System.Nullable<decimal>)(inValues[12]));
        System.Nullable<decimal> Longitude = ((System.Nullable<decimal>)(inValues[13]));
        System.Nullable<int> TypeID = ((System.Nullable<int>)(inValues[14]));
        System.Nullable<int> ImageRotation = ((System.Nullable<int>)(inValues[15]));
        string Device = ((string)(inValues[16]));
        System.Nullable<int> PropertyID = ((System.Nullable<int>)(inValues[17]));
        string PropertyName = ((string)(inValues[18]));
        return this.BeginReportIssueAndRegisterUser(ReporterID, Name, Email, Password, PhoneNumber, AccountID, Subject, Message, FileName, File, FileType, FileLength, Latitude, Longitude, TypeID, ImageRotation, Device, PropertyID, PropertyName, callback, asyncState);
    }

    private object[] OnEndReportIssueAndRegisterUser(System.IAsyncResult result)
    {
        string retVal = this.EndReportIssueAndRegisterUser(result);
        return new object[] {
                retVal};
    }

    private void OnReportIssueAndRegisterUserCompleted(object state)
    {
        if ((this.ReportIssueAndRegisterUserCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ReportIssueAndRegisterUserCompleted(this, new ReportIssueAndRegisterUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ReportIssueAndRegisterUserAsync(
                System.Nullable<int> ReporterID,
                string Name,
                string Email,
                string Password,
                string PhoneNumber,
                System.Nullable<int> AccountID,
                string Subject,
                string Message,
                string FileName,
                byte[] File,
                string FileType,
                int FileLength,
                System.Nullable<decimal> Latitude,
                System.Nullable<decimal> Longitude,
                System.Nullable<int> TypeID,
                System.Nullable<int> ImageRotation,
                string Device,
                System.Nullable<int> PropertyID,
                string PropertyName)
    {
        this.ReportIssueAndRegisterUserAsync(ReporterID, Name, Email, Password, PhoneNumber, AccountID, Subject, Message, FileName, File, FileType, FileLength, Latitude, Longitude, TypeID, ImageRotation, Device, PropertyID, PropertyName, null);
    }

    public void ReportIssueAndRegisterUserAsync(
                System.Nullable<int> ReporterID,
                string Name,
                string Email,
                string Password,
                string PhoneNumber,
                System.Nullable<int> AccountID,
                string Subject,
                string Message,
                string FileName,
                byte[] File,
                string FileType,
                int FileLength,
                System.Nullable<decimal> Latitude,
                System.Nullable<decimal> Longitude,
                System.Nullable<int> TypeID,
                System.Nullable<int> ImageRotation,
                string Device,
                System.Nullable<int> PropertyID,
                string PropertyName,
                object userState)
    {
        if ((this.onBeginReportIssueAndRegisterUserDelegate == null))
        {
            this.onBeginReportIssueAndRegisterUserDelegate = new BeginOperationDelegate(this.OnBeginReportIssueAndRegisterUser);
        }
        if ((this.onEndReportIssueAndRegisterUserDelegate == null))
        {
            this.onEndReportIssueAndRegisterUserDelegate = new EndOperationDelegate(this.OnEndReportIssueAndRegisterUser);
        }
        if ((this.onReportIssueAndRegisterUserCompletedDelegate == null))
        {
            this.onReportIssueAndRegisterUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReportIssueAndRegisterUserCompleted);
        }
        base.InvokeAsync(this.onBeginReportIssueAndRegisterUserDelegate, new object[] {
                    ReporterID,
                    Name,
                    Email,
                    Password,
                    PhoneNumber,
                    AccountID,
                    Subject,
                    Message,
                    FileName,
                    File,
                    FileType,
                    FileLength,
                    Latitude,
                    Longitude,
                    TypeID,
                    ImageRotation,
                    Device,
                    PropertyID,
                    PropertyName}, this.onEndReportIssueAndRegisterUserDelegate, this.onReportIssueAndRegisterUserCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IssuesWebServiceSoap.BeginGetMyIssues(GetMyIssuesRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetMyIssues(request, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private System.IAsyncResult BeginGetMyIssues(int ReporterID, System.Nullable<int> AccountID, System.Nullable<int> TypeID, System.AsyncCallback callback, object asyncState)
    {
        GetMyIssuesRequest inValue = new GetMyIssuesRequest();
        inValue.Body = new GetMyIssuesRequestBody();
        inValue.Body.ReporterID = ReporterID;
        inValue.Body.AccountID = AccountID;
        inValue.Body.TypeID = TypeID;
        return ((IssuesWebServiceSoap)(this)).BeginGetMyIssues(inValue, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetMyIssuesResponse IssuesWebServiceSoap.EndGetMyIssues(System.IAsyncResult result)
    {
        return base.Channel.EndGetMyIssues(result);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private string EndGetMyIssues(System.IAsyncResult result)
    {
        GetMyIssuesResponse retVal = ((IssuesWebServiceSoap)(this)).EndGetMyIssues(result);
        return retVal.Body.GetMyIssuesResult;
    }

    private System.IAsyncResult OnBeginGetMyIssues(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int ReporterID = ((int)(inValues[0]));
        System.Nullable<int> AccountID = ((System.Nullable<int>)(inValues[1]));
        System.Nullable<int> TypeID = ((System.Nullable<int>)(inValues[2]));
        return this.BeginGetMyIssues(ReporterID, AccountID, TypeID, callback, asyncState);
    }

    private object[] OnEndGetMyIssues(System.IAsyncResult result)
    {
        string retVal = this.EndGetMyIssues(result);
        return new object[] {
                retVal};
    }

    private void OnGetMyIssuesCompleted(object state)
    {
        if ((this.GetMyIssuesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetMyIssuesCompleted(this, new GetMyIssuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetMyIssuesAsync(int ReporterID, System.Nullable<int> AccountID, System.Nullable<int> TypeID)
    {
        this.GetMyIssuesAsync(ReporterID, AccountID, TypeID, null);
    }

    public void GetMyIssuesAsync(int ReporterID, System.Nullable<int> AccountID, System.Nullable<int> TypeID, object userState)
    {
        if ((this.onBeginGetMyIssuesDelegate == null))
        {
            this.onBeginGetMyIssuesDelegate = new BeginOperationDelegate(this.OnBeginGetMyIssues);
        }
        if ((this.onEndGetMyIssuesDelegate == null))
        {
            this.onEndGetMyIssuesDelegate = new EndOperationDelegate(this.OnEndGetMyIssues);
        }
        if ((this.onGetMyIssuesCompletedDelegate == null))
        {
            this.onGetMyIssuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMyIssuesCompleted);
        }
        base.InvokeAsync(this.onBeginGetMyIssuesDelegate, new object[] {
                    ReporterID,
                    AccountID,
                    TypeID}, this.onEndGetMyIssuesDelegate, this.onGetMyIssuesCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IssuesWebServiceSoap.BeginGetTypes(GetTypesRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetTypes(request, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private System.IAsyncResult BeginGetTypes(System.Nullable<int> AccountID, System.AsyncCallback callback, object asyncState)
    {
        GetTypesRequest inValue = new GetTypesRequest();
        inValue.Body = new GetTypesRequestBody();
        inValue.Body.AccountID = AccountID;
        return ((IssuesWebServiceSoap)(this)).BeginGetTypes(inValue, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetTypesResponse IssuesWebServiceSoap.EndGetTypes(System.IAsyncResult result)
    {
        return base.Channel.EndGetTypes(result);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private string EndGetTypes(System.IAsyncResult result)
    {
        GetTypesResponse retVal = ((IssuesWebServiceSoap)(this)).EndGetTypes(result);
        return retVal.Body.GetTypesResult;
    }

    private System.IAsyncResult OnBeginGetTypes(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Nullable<int> AccountID = ((System.Nullable<int>)(inValues[0]));
        return this.BeginGetTypes(AccountID, callback, asyncState);
    }

    private object[] OnEndGetTypes(System.IAsyncResult result)
    {
        string retVal = this.EndGetTypes(result);
        return new object[] {
                retVal};
    }

    private void OnGetTypesCompleted(object state)
    {
        if ((this.GetTypesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetTypesCompleted(this, new GetTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetTypesAsync(System.Nullable<int> AccountID)
    {
        this.GetTypesAsync(AccountID, null);
    }

    public void GetTypesAsync(System.Nullable<int> AccountID, object userState)
    {
        if ((this.onBeginGetTypesDelegate == null))
        {
            this.onBeginGetTypesDelegate = new BeginOperationDelegate(this.OnBeginGetTypes);
        }
        if ((this.onEndGetTypesDelegate == null))
        {
            this.onEndGetTypesDelegate = new EndOperationDelegate(this.OnEndGetTypes);
        }
        if ((this.onGetTypesCompletedDelegate == null))
        {
            this.onGetTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTypesCompleted);
        }
        base.InvokeAsync(this.onBeginGetTypesDelegate, new object[] {
                    AccountID}, this.onEndGetTypesDelegate, this.onGetTypesCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IssuesWebServiceSoap.BeginGetTypesAndSubTypes(GetTypesAndSubTypesRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetTypesAndSubTypes(request, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private System.IAsyncResult BeginGetTypesAndSubTypes(System.Nullable<int> AccountID, System.AsyncCallback callback, object asyncState)
    {
        GetTypesAndSubTypesRequest inValue = new GetTypesAndSubTypesRequest();
        inValue.Body = new GetTypesAndSubTypesRequestBody();
        inValue.Body.AccountID = AccountID;
        return ((IssuesWebServiceSoap)(this)).BeginGetTypesAndSubTypes(inValue, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetTypesAndSubTypesResponse IssuesWebServiceSoap.EndGetTypesAndSubTypes(System.IAsyncResult result)
    {
        return base.Channel.EndGetTypesAndSubTypes(result);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private string EndGetTypesAndSubTypes(System.IAsyncResult result)
    {
        GetTypesAndSubTypesResponse retVal = ((IssuesWebServiceSoap)(this)).EndGetTypesAndSubTypes(result);
        return retVal.Body.GetTypesAndSubTypesResult;
    }

    private System.IAsyncResult OnBeginGetTypesAndSubTypes(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Nullable<int> AccountID = ((System.Nullable<int>)(inValues[0]));
        return this.BeginGetTypesAndSubTypes(AccountID, callback, asyncState);
    }

    private object[] OnEndGetTypesAndSubTypes(System.IAsyncResult result)
    {
        string retVal = this.EndGetTypesAndSubTypes(result);
        return new object[] {
                retVal};
    }

    private void OnGetTypesAndSubTypesCompleted(object state)
    {
        if ((this.GetTypesAndSubTypesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetTypesAndSubTypesCompleted(this, new GetTypesAndSubTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetTypesAndSubTypesAsync(System.Nullable<int> AccountID)
    {
        this.GetTypesAndSubTypesAsync(AccountID, null);
    }

    public void GetTypesAndSubTypesAsync(System.Nullable<int> AccountID, object userState)
    {
        if ((this.onBeginGetTypesAndSubTypesDelegate == null))
        {
            this.onBeginGetTypesAndSubTypesDelegate = new BeginOperationDelegate(this.OnBeginGetTypesAndSubTypes);
        }
        if ((this.onEndGetTypesAndSubTypesDelegate == null))
        {
            this.onEndGetTypesAndSubTypesDelegate = new EndOperationDelegate(this.OnEndGetTypesAndSubTypes);
        }
        if ((this.onGetTypesAndSubTypesCompletedDelegate == null))
        {
            this.onGetTypesAndSubTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTypesAndSubTypesCompleted);
        }
        base.InvokeAsync(this.onBeginGetTypesAndSubTypesDelegate, new object[] {
                    AccountID}, this.onEndGetTypesAndSubTypesDelegate, this.onGetTypesAndSubTypesCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IssuesWebServiceSoap.BeginDeleteIssue(DeleteIssueRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDeleteIssue(request, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private System.IAsyncResult BeginDeleteIssue(int ReporterID, System.Nullable<int> AccountID, int IssueID, System.AsyncCallback callback, object asyncState)
    {
        DeleteIssueRequest inValue = new DeleteIssueRequest();
        inValue.Body = new DeleteIssueRequestBody();
        inValue.Body.ReporterID = ReporterID;
        inValue.Body.AccountID = AccountID;
        inValue.Body.IssueID = IssueID;
        return ((IssuesWebServiceSoap)(this)).BeginDeleteIssue(inValue, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    DeleteIssueResponse IssuesWebServiceSoap.EndDeleteIssue(System.IAsyncResult result)
    {
        return base.Channel.EndDeleteIssue(result);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private string EndDeleteIssue(System.IAsyncResult result)
    {
        DeleteIssueResponse retVal = ((IssuesWebServiceSoap)(this)).EndDeleteIssue(result);
        return retVal.Body.DeleteIssueResult;
    }

    private System.IAsyncResult OnBeginDeleteIssue(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int ReporterID = ((int)(inValues[0]));
        System.Nullable<int> AccountID = ((System.Nullable<int>)(inValues[1]));
        int IssueID = ((int)(inValues[2]));
        return this.BeginDeleteIssue(ReporterID, AccountID, IssueID, callback, asyncState);
    }

    private object[] OnEndDeleteIssue(System.IAsyncResult result)
    {
        string retVal = this.EndDeleteIssue(result);
        return new object[] {
                retVal};
    }

    private void OnDeleteIssueCompleted(object state)
    {
        if ((this.DeleteIssueCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DeleteIssueCompleted(this, new DeleteIssueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void DeleteIssueAsync(int ReporterID, System.Nullable<int> AccountID, int IssueID)
    {
        this.DeleteIssueAsync(ReporterID, AccountID, IssueID, null);
    }

    public void DeleteIssueAsync(int ReporterID, System.Nullable<int> AccountID, int IssueID, object userState)
    {
        if ((this.onBeginDeleteIssueDelegate == null))
        {
            this.onBeginDeleteIssueDelegate = new BeginOperationDelegate(this.OnBeginDeleteIssue);
        }
        if ((this.onEndDeleteIssueDelegate == null))
        {
            this.onEndDeleteIssueDelegate = new EndOperationDelegate(this.OnEndDeleteIssue);
        }
        if ((this.onDeleteIssueCompletedDelegate == null))
        {
            this.onDeleteIssueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteIssueCompleted);
        }
        base.InvokeAsync(this.onBeginDeleteIssueDelegate, new object[] {
                    ReporterID,
                    AccountID,
                    IssueID}, this.onEndDeleteIssueDelegate, this.onDeleteIssueCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IssuesWebServiceSoap.BeginGetNearByIssues(GetNearByIssuesRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetNearByIssues(request, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private System.IAsyncResult BeginGetNearByIssues(System.Nullable<int> AccountID, double Latitude, double Longitude, System.Nullable<int> Radius, System.AsyncCallback callback, object asyncState)
    {
        GetNearByIssuesRequest inValue = new GetNearByIssuesRequest();
        inValue.Body = new GetNearByIssuesRequestBody();
        inValue.Body.AccountID = AccountID;
        inValue.Body.Latitude = Latitude;
        inValue.Body.Longitude = Longitude;
        inValue.Body.Radius = Radius;
        return ((IssuesWebServiceSoap)(this)).BeginGetNearByIssues(inValue, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetNearByIssuesResponse IssuesWebServiceSoap.EndGetNearByIssues(System.IAsyncResult result)
    {
        return base.Channel.EndGetNearByIssues(result);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private string EndGetNearByIssues(System.IAsyncResult result)
    {
        GetNearByIssuesResponse retVal = ((IssuesWebServiceSoap)(this)).EndGetNearByIssues(result);
        return retVal.Body.GetNearByIssuesResult;
    }

    private System.IAsyncResult OnBeginGetNearByIssues(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Nullable<int> AccountID = ((System.Nullable<int>)(inValues[0]));
        double Latitude = ((double)(inValues[1]));
        double Longitude = ((double)(inValues[2]));
        System.Nullable<int> Radius = ((System.Nullable<int>)(inValues[3]));
        return this.BeginGetNearByIssues(AccountID, Latitude, Longitude, Radius, callback, asyncState);
    }

    private object[] OnEndGetNearByIssues(System.IAsyncResult result)
    {
        string retVal = this.EndGetNearByIssues(result);
        return new object[] {
                retVal};
    }

    private void OnGetNearByIssuesCompleted(object state)
    {
        if ((this.GetNearByIssuesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetNearByIssuesCompleted(this, new GetNearByIssuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void GetNearByIssuesAsync(System.Nullable<int> AccountID, double Latitude, double Longitude, System.Nullable<int> Radius)
    {
        this.GetNearByIssuesAsync(AccountID, Latitude, Longitude, Radius, null);
    }

    public void GetNearByIssuesAsync(System.Nullable<int> AccountID, double Latitude, double Longitude, System.Nullable<int> Radius, object userState)
    {
        if ((this.onBeginGetNearByIssuesDelegate == null))
        {
            this.onBeginGetNearByIssuesDelegate = new BeginOperationDelegate(this.OnBeginGetNearByIssues);
        }
        if ((this.onEndGetNearByIssuesDelegate == null))
        {
            this.onEndGetNearByIssuesDelegate = new EndOperationDelegate(this.OnEndGetNearByIssues);
        }
        if ((this.onGetNearByIssuesCompletedDelegate == null))
        {
            this.onGetNearByIssuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNearByIssuesCompleted);
        }
        base.InvokeAsync(this.onBeginGetNearByIssuesDelegate, new object[] {
                    AccountID,
                    Latitude,
                    Longitude,
                    Radius}, this.onEndGetNearByIssuesDelegate, this.onGetNearByIssuesCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IssuesWebServiceSoap.BeginCountNearByIssues(CountNearByIssuesRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCountNearByIssues(request, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private System.IAsyncResult BeginCountNearByIssues(System.Nullable<int> AccountID, double Latitude, double Longitude, System.Nullable<int> Radius, System.AsyncCallback callback, object asyncState)
    {
        CountNearByIssuesRequest inValue = new CountNearByIssuesRequest();
        inValue.Body = new CountNearByIssuesRequestBody();
        inValue.Body.AccountID = AccountID;
        inValue.Body.Latitude = Latitude;
        inValue.Body.Longitude = Longitude;
        inValue.Body.Radius = Radius;
        return ((IssuesWebServiceSoap)(this)).BeginCountNearByIssues(inValue, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    CountNearByIssuesResponse IssuesWebServiceSoap.EndCountNearByIssues(System.IAsyncResult result)
    {
        return base.Channel.EndCountNearByIssues(result);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private string EndCountNearByIssues(System.IAsyncResult result)
    {
        CountNearByIssuesResponse retVal = ((IssuesWebServiceSoap)(this)).EndCountNearByIssues(result);
        return retVal.Body.CountNearByIssuesResult;
    }

    private System.IAsyncResult OnBeginCountNearByIssues(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Nullable<int> AccountID = ((System.Nullable<int>)(inValues[0]));
        double Latitude = ((double)(inValues[1]));
        double Longitude = ((double)(inValues[2]));
        System.Nullable<int> Radius = ((System.Nullable<int>)(inValues[3]));
        return this.BeginCountNearByIssues(AccountID, Latitude, Longitude, Radius, callback, asyncState);
    }

    private object[] OnEndCountNearByIssues(System.IAsyncResult result)
    {
        string retVal = this.EndCountNearByIssues(result);
        return new object[] {
                retVal};
    }

    private void OnCountNearByIssuesCompleted(object state)
    {
        if ((this.CountNearByIssuesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CountNearByIssuesCompleted(this, new CountNearByIssuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void CountNearByIssuesAsync(System.Nullable<int> AccountID, double Latitude, double Longitude, System.Nullable<int> Radius)
    {
        this.CountNearByIssuesAsync(AccountID, Latitude, Longitude, Radius, null);
    }

    public void CountNearByIssuesAsync(System.Nullable<int> AccountID, double Latitude, double Longitude, System.Nullable<int> Radius, object userState)
    {
        if ((this.onBeginCountNearByIssuesDelegate == null))
        {
            this.onBeginCountNearByIssuesDelegate = new BeginOperationDelegate(this.OnBeginCountNearByIssues);
        }
        if ((this.onEndCountNearByIssuesDelegate == null))
        {
            this.onEndCountNearByIssuesDelegate = new EndOperationDelegate(this.OnEndCountNearByIssues);
        }
        if ((this.onCountNearByIssuesCompletedDelegate == null))
        {
            this.onCountNearByIssuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCountNearByIssuesCompleted);
        }
        base.InvokeAsync(this.onBeginCountNearByIssuesDelegate, new object[] {
                    AccountID,
                    Latitude,
                    Longitude,
                    Radius}, this.onEndCountNearByIssuesDelegate, this.onCountNearByIssuesCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IssuesWebServiceSoap.BeginListProperties(ListPropertiesRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginListProperties(request, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private System.IAsyncResult BeginListProperties(System.Nullable<int> AccountID, System.AsyncCallback callback, object asyncState)
    {
        ListPropertiesRequest inValue = new ListPropertiesRequest();
        inValue.Body = new ListPropertiesRequestBody();
        inValue.Body.AccountID = AccountID;
        return ((IssuesWebServiceSoap)(this)).BeginListProperties(inValue, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    ListPropertiesResponse IssuesWebServiceSoap.EndListProperties(System.IAsyncResult result)
    {
        return base.Channel.EndListProperties(result);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private string EndListProperties(System.IAsyncResult result)
    {
        ListPropertiesResponse retVal = ((IssuesWebServiceSoap)(this)).EndListProperties(result);
        return retVal.Body.ListPropertiesResult;
    }

    private System.IAsyncResult OnBeginListProperties(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Nullable<int> AccountID = ((System.Nullable<int>)(inValues[0]));
        return this.BeginListProperties(AccountID, callback, asyncState);
    }

    private object[] OnEndListProperties(System.IAsyncResult result)
    {
        string retVal = this.EndListProperties(result);
        return new object[] {
                retVal};
    }

    private void OnListPropertiesCompleted(object state)
    {
        if ((this.ListPropertiesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ListPropertiesCompleted(this, new ListPropertiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void ListPropertiesAsync(System.Nullable<int> AccountID)
    {
        this.ListPropertiesAsync(AccountID, null);
    }

    public void ListPropertiesAsync(System.Nullable<int> AccountID, object userState)
    {
        if ((this.onBeginListPropertiesDelegate == null))
        {
            this.onBeginListPropertiesDelegate = new BeginOperationDelegate(this.OnBeginListProperties);
        }
        if ((this.onEndListPropertiesDelegate == null))
        {
            this.onEndListPropertiesDelegate = new EndOperationDelegate(this.OnEndListProperties);
        }
        if ((this.onListPropertiesCompletedDelegate == null))
        {
            this.onListPropertiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListPropertiesCompleted);
        }
        base.InvokeAsync(this.onBeginListPropertiesDelegate, new object[] {
                    AccountID}, this.onEndListPropertiesDelegate, this.onListPropertiesCompletedDelegate, userState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IssuesWebServiceSoap.BeginInsertProperty(InsertPropertyRequest request, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginInsertProperty(request, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private System.IAsyncResult BeginInsertProperty(System.Nullable<int> AccountID, System.Nullable<int> ReporterID, string Name, string Email, string Password, string PhoneNumber, string PropertyName, System.AsyncCallback callback, object asyncState)
    {
        InsertPropertyRequest inValue = new InsertPropertyRequest();
        inValue.Body = new InsertPropertyRequestBody();
        inValue.Body.AccountID = AccountID;
        inValue.Body.ReporterID = ReporterID;
        inValue.Body.Name = Name;
        inValue.Body.Email = Email;
        inValue.Body.Password = Password;
        inValue.Body.PhoneNumber = PhoneNumber;
        inValue.Body.PropertyName = PropertyName;
        return ((IssuesWebServiceSoap)(this)).BeginInsertProperty(inValue, callback, asyncState);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    InsertPropertyResponse IssuesWebServiceSoap.EndInsertProperty(System.IAsyncResult result)
    {
        return base.Channel.EndInsertProperty(result);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    private string EndInsertProperty(System.IAsyncResult result)
    {
        InsertPropertyResponse retVal = ((IssuesWebServiceSoap)(this)).EndInsertProperty(result);
        return retVal.Body.InsertPropertyResult;
    }

    private System.IAsyncResult OnBeginInsertProperty(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Nullable<int> AccountID = ((System.Nullable<int>)(inValues[0]));
        System.Nullable<int> ReporterID = ((System.Nullable<int>)(inValues[1]));
        string Name = ((string)(inValues[2]));
        string Email = ((string)(inValues[3]));
        string Password = ((string)(inValues[4]));
        string PhoneNumber = ((string)(inValues[5]));
        string PropertyName = ((string)(inValues[6]));
        return this.BeginInsertProperty(AccountID, ReporterID, Name, Email, Password, PhoneNumber, PropertyName, callback, asyncState);
    }

    private object[] OnEndInsertProperty(System.IAsyncResult result)
    {
        string retVal = this.EndInsertProperty(result);
        return new object[] {
                retVal};
    }

    private void OnInsertPropertyCompleted(object state)
    {
        if ((this.InsertPropertyCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.InsertPropertyCompleted(this, new InsertPropertyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }

    public void InsertPropertyAsync(System.Nullable<int> AccountID, System.Nullable<int> ReporterID, string Name, string Email, string Password, string PhoneNumber, string PropertyName)
    {
        this.InsertPropertyAsync(AccountID, ReporterID, Name, Email, Password, PhoneNumber, PropertyName, null);
    }

    public void InsertPropertyAsync(System.Nullable<int> AccountID, System.Nullable<int> ReporterID, string Name, string Email, string Password, string PhoneNumber, string PropertyName, object userState)
    {
        if ((this.onBeginInsertPropertyDelegate == null))
        {
            this.onBeginInsertPropertyDelegate = new BeginOperationDelegate(this.OnBeginInsertProperty);
        }
        if ((this.onEndInsertPropertyDelegate == null))
        {
            this.onEndInsertPropertyDelegate = new EndOperationDelegate(this.OnEndInsertProperty);
        }
        if ((this.onInsertPropertyCompletedDelegate == null))
        {
            this.onInsertPropertyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertPropertyCompleted);
        }
        base.InvokeAsync(this.onBeginInsertPropertyDelegate, new object[] {
                    AccountID,
                    ReporterID,
                    Name,
                    Email,
                    Password,
                    PhoneNumber,
                    PropertyName}, this.onEndInsertPropertyDelegate, this.onInsertPropertyCompletedDelegate, userState);
    }

    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }

    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }

    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }

    public void OpenAsync()
    {
        this.OpenAsync(null);
    }

    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }

    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }

    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }

    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }

    public void CloseAsync()
    {
        this.CloseAsync(null);
    }

    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }

    protected override IssuesWebServiceSoap CreateChannel()
    {
        return new IssuesWebServiceSoapClientChannel(this);
    }

    private class IssuesWebServiceSoapClientChannel : ChannelBase<IssuesWebServiceSoap>, IssuesWebServiceSoap
    {

        public IssuesWebServiceSoapClientChannel(System.ServiceModel.ClientBase<IssuesWebServiceSoap> client) :
            base(client)
        {
        }

        public System.IAsyncResult BeginRegisterReporter(RegisterReporterRequest request, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = request;
            System.IAsyncResult _result = base.BeginInvoke("RegisterReporter", _args, callback, asyncState);
            return _result;
        }

        public RegisterReporterResponse EndRegisterReporter(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            RegisterReporterResponse _result = ((RegisterReporterResponse)(base.EndInvoke("RegisterReporter", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginReportIssueAndRegisterUser(ReportIssueAndRegisterUserRequest request, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = request;
            System.IAsyncResult _result = base.BeginInvoke("ReportIssueAndRegisterUser", _args, callback, asyncState);
            return _result;
        }

        public ReportIssueAndRegisterUserResponse EndReportIssueAndRegisterUser(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            ReportIssueAndRegisterUserResponse _result = ((ReportIssueAndRegisterUserResponse)(base.EndInvoke("ReportIssueAndRegisterUser", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetMyIssues(GetMyIssuesRequest request, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = request;
            System.IAsyncResult _result = base.BeginInvoke("GetMyIssues", _args, callback, asyncState);
            return _result;
        }

        public GetMyIssuesResponse EndGetMyIssues(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            GetMyIssuesResponse _result = ((GetMyIssuesResponse)(base.EndInvoke("GetMyIssues", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetTypes(GetTypesRequest request, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = request;
            System.IAsyncResult _result = base.BeginInvoke("GetTypes", _args, callback, asyncState);
            return _result;
        }

        public GetTypesResponse EndGetTypes(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            GetTypesResponse _result = ((GetTypesResponse)(base.EndInvoke("GetTypes", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetTypesAndSubTypes(GetTypesAndSubTypesRequest request, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = request;
            System.IAsyncResult _result = base.BeginInvoke("GetTypesAndSubTypes", _args, callback, asyncState);
            return _result;
        }

        public GetTypesAndSubTypesResponse EndGetTypesAndSubTypes(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            GetTypesAndSubTypesResponse _result = ((GetTypesAndSubTypesResponse)(base.EndInvoke("GetTypesAndSubTypes", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginDeleteIssue(DeleteIssueRequest request, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = request;
            System.IAsyncResult _result = base.BeginInvoke("DeleteIssue", _args, callback, asyncState);
            return _result;
        }

        public DeleteIssueResponse EndDeleteIssue(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            DeleteIssueResponse _result = ((DeleteIssueResponse)(base.EndInvoke("DeleteIssue", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginGetNearByIssues(GetNearByIssuesRequest request, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = request;
            System.IAsyncResult _result = base.BeginInvoke("GetNearByIssues", _args, callback, asyncState);
            return _result;
        }

        public GetNearByIssuesResponse EndGetNearByIssues(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            GetNearByIssuesResponse _result = ((GetNearByIssuesResponse)(base.EndInvoke("GetNearByIssues", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginCountNearByIssues(CountNearByIssuesRequest request, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = request;
            System.IAsyncResult _result = base.BeginInvoke("CountNearByIssues", _args, callback, asyncState);
            return _result;
        }

        public CountNearByIssuesResponse EndCountNearByIssues(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            CountNearByIssuesResponse _result = ((CountNearByIssuesResponse)(base.EndInvoke("CountNearByIssues", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginListProperties(ListPropertiesRequest request, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = request;
            System.IAsyncResult _result = base.BeginInvoke("ListProperties", _args, callback, asyncState);
            return _result;
        }

        public ListPropertiesResponse EndListProperties(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            ListPropertiesResponse _result = ((ListPropertiesResponse)(base.EndInvoke("ListProperties", _args, result)));
            return _result;
        }

        public System.IAsyncResult BeginInsertProperty(InsertPropertyRequest request, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = request;
            System.IAsyncResult _result = base.BeginInvoke("InsertProperty", _args, callback, asyncState);
            return _result;
        }

        public InsertPropertyResponse EndInsertProperty(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            InsertPropertyResponse _result = ((InsertPropertyResponse)(base.EndInvoke("InsertProperty", _args, result)));
            return _result;
        }
    }
}
